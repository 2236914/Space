<?php
header('Content-Type: application/json'); // Ensure JSON response
require_once '../configs/config.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        // Validate required fields
        $required_fields = ['srcode', 'firstname', 'lastname', 'phonenum', 'email', 'password'];
        foreach ($required_fields as $field) {
            if (empty($_POST[$field])) {
                throw new Exception("$field is required");
            }
        }

        // Validate phone number format
        if (!preg_match('/^09\d{9}$/', $_POST['phonenum'])) {
            throw new Exception("Invalid phone number format");
        }

        // Check if SR-Code already exists
        $stmt = $pdo->prepare("SELECT COUNT(*) FROM students WHERE srcode = ?");
        $stmt->execute([$_POST['srcode']]);
        if ($stmt->fetchColumn() > 0) {
            throw new Exception("SR-Code already exists");
        }

        // Check if email already exists
        $stmt = $pdo->prepare("SELECT COUNT(*) FROM students WHERE email = ?");
        $stmt->execute([$_POST['email']]);
        if ($stmt->fetchColumn() > 0) {
            throw new Exception("Email already exists");
        }

        // Check if phone number already exists
        $stmt = $pdo->prepare("SELECT COUNT(*) FROM students WHERE phonenum = ?");
        $stmt->execute([$_POST['phonenum']]);
        if ($stmt->fetchColumn() > 0) {
            throw new Exception("Phone number already exists");
        }

        // Hash the password
        $hashed_password = password_hash($_POST['password'], PASSWORD_DEFAULT);

        // Insert new student (username will be auto-generated by trigger)
        $stmt = $pdo->prepare("
            INSERT INTO students (
                srcode, firstname, lastname, phonenum, email, 
                password, department, year, section, course
            ) VALUES (
                :srcode, :firstname, :lastname, :phonenum, :email,
                :password, :department, :year, :section, :course
            )
        ");

        $result = $stmt->execute([
            'srcode' => $_POST['srcode'],
            'firstname' => $_POST['firstname'],
            'lastname' => $_POST['lastname'],
            'phonenum' => $_POST['phonenum'],
            'email' => $_POST['email'],
            'password' => $hashed_password,
            'department' => $_POST['department'] ?? null,
            'year' => $_POST['year'] ?? null,
            'section' => $_POST['section'] ?? null,
            'course' => $_POST['course'] ?? null
        ]);

        if ($result) {
            // Fetch the generated username
            $stmt = $pdo->prepare("SELECT username FROM students WHERE srcode = ?");
            $stmt->execute([$_POST['srcode']]);
            $username = $stmt->fetchColumn();

            echo json_encode([
                'success' => true,
                'message' => 'Student added successfully',
                'username' => $username // Return the auto-generated username
            ]);
        } else {
            throw new Exception("Failed to add student");
        }

    } catch (PDOException $e) {
        // Log the error for debugging (optional)
        error_log("Database Error: " . $e->getMessage());
        
        echo json_encode([
            'success' => false,
            'message' => 'Database error occurred. Please try again.'
        ]);
    } catch (Exception $e) {
        echo json_encode([
            'success' => false,
            'message' => $e->getMessage()
        ]);
    }
} else {
    echo json_encode([
        'success' => false,
        'message' => 'Invalid request method'
    ]);
}
?>
